shell.executable("bash")

rule sintax:
    input:
        "VSEARCH/otus.fasta"
    output:
        "taxonomy/assignment_report.tsv"
    params:
        sintax_db = config["sintax"]["sintax_db"],
        cutoff = config["sintax"]["sintax_cutoff"]
    threads: config["threads"]
    message: "Taxonomic assignment of OTUs with sintax"
    conda: "../envs/vsearch.yaml"
    log:
        "logs/sintax.log"
    shell:
        "vsearch --sintax {input} --db {params.sintax_db} --tabbedout {output} --sintax_cutoff {params.cutoff} --log {log}"

rule sintax_stats:
    input: 
        "taxonomy/assignment_report.tsv"
    output:
        "reports/assignment_stats.tsv"
    params:
        lineage = config["taxonomy"]["rankedlineage_dmp"],
        nodes = config["taxonomy"]["nodes_dmp"]
    message: "Collecting SINTAX stats"
    script:
        "../scripts/sintax_stats.py"

rule otutab2lca:
    input:
        otu = "{sample}/{sample}_otutab.tsv",
        lca = "reports/assignment_stats.tsv"
    output:
        "{sample}/{sample}_composition.tsv"
    message:
        "Determining the composition of {wildcards.sample}"
    shell:
        """
        echo "Query\tCount\tConsensus\tRank\tTaxid" > {output}
        
        while IFS= read -r line
        do
            otu=$(echo $line | cut -d' ' -f1)
            size=$(echo $line | cut -d' ' -f2)
            cons=$(grep -E "^${{otu}}\>" {input.lca} | cut -d'\t' -f4-6)
            echo "$otu\t$size\t$cons" >> {output}
        done < {input.otu} 
        """
